Configi

CHANGES with 0.9.6
    * tests: Equality tests are reversed.
    * makefile: Added make arguments for turning on AddressSanitizer.
    * configi: For uniformity, swap the 1st and 2nd arguments of F.result().
    * modules: Make use of the new F.result() capability.
    * configi: Allow alternate messages via F.result calls.
    * sha256: Introduce new Configi module.
    * sha2: Introduce sha2 Lua module.
    * makefile: Prefix the static library name of Configi modules.
    * px: close(2) should not be retried ever.
    * Removed Lustache dependency.
    * makefile: Do not show calls to printf.
    * modules: Use the G table for messages.
    * px: Introduce fwrite().
    * cfg: Set the OOM score when running in daemon mode.
    * configi: Use a function for logging.
    * makefile: Add DEBUG and STATIC make arguments.
    * tests: Get rid of calls to diff(diffutils).
    * crc32: Introduce crc32lua Lua module.
    * cimicida: A bit more robust version of sub().
    * tests: Update to accomodate the recent to px.exec, px.qexec, cimicida.popen, cimicida.execute change.
    * modules: Update run() to accomodate the recent to px.exec, px.qexec change.
    * cimicida.popen, cimicida.execute: Compatibility change. Output is now similar to px.exec, px.qexec.
    * px.exec, px.qexec: Change the output to bool, tbl.
    * module.portage: Test for a valid directory before traversing it.
CHANGES with 0.9.5
    * Fixed bugs in the file module. owner, group and mode should be declared when using attrib()
CHANGES with 0.9.4
    * Fixed bugs in the file module. The src and path parameters are swapped in the file.link and file.hard functions
CHANGES with 0.9.3
    * Several fixes to the textfile module
    * Fix px.awrite() so the fcntl() call does not abort on failure
    * Fix F.msg() so a returned nil from a f() is considered a failure
    * New textfile feature that compares rendered text and a existing destination. This obsoletes the force parameter
    * Use native Lua 5.3 numbers
    * Reverse checking for the DEBUG DEFINE. Now we pass -DDEBUG to get the debug Lua module
    * Fix the shell module to use the new cimicida.fopen()
    * A more efficient cimicida.fopen()
    * Add a CRC32 Lua module for textfile feature. It requires bit32 so pull that in too
CHANGES with 0.9.2
    * New function cimicida.escape_pattern()
    * Fixes for pattern matching in several module parameters
CHANGES with 0.9.1
    * Return an error when attempting to pass a table as parameters to a function
    * Fixes for the openrc, textfile and portage modules
    * Fix `make clean` when deleting a temporary directory
CHANGES with 0.9.0
    * first public release
